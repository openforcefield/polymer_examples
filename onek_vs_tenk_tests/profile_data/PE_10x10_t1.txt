         9608828 function calls (9466148 primitive calls) in 33.816 seconds

   Random listing order was used

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     1810    0.003    0.000    0.003    0.000 _valence.py:312(_is_constrained)
        1    0.000    0.000    0.000    0.000 _valence.py:274(_process_improper_torsion_forces)
        1    0.097    0.097    2.651    2.651 _valence.py:191(_process_proper_torsion_forces)
    10250    0.011    0.000    0.011    0.000 _valence.py:202(<genexpr>)
        1    0.000    0.000    2.651    2.651 _valence.py:184(_process_torsion_forces)
        1    0.054    0.054    1.317    1.317 _valence.py:100(_process_angle_forces)
     4800    0.005    0.000    0.005    0.000 _valence.py:137(<genexpr>)
        1    0.010    0.010    0.213    0.213 _valence.py:47(_process_bond_forces)
     1830    0.002    0.000    0.002    0.000 _valence.py:76(<genexpr>)
        1    0.014    0.014    0.179    0.179 _valence.py:14(_process_constraints)
     1260    0.001    0.000    0.001    0.000 _valence.py:31(<genexpr>)
        1    0.000    0.000    0.001    0.001 _nonbonded.py:967(_apply_switching_function)
        1    0.000    0.000    0.013    0.013 _nonbonded.py:435(_create_exceptions)
        1    0.002    0.002    0.011    0.011 _nonbonded.py:443(<listcomp>)
     1830    0.003    0.000    0.005    0.000 _nonbonded.py:444(<genexpr>)
        1    0.071    0.071    0.766    0.766 _nonbonded.py:244(_create_single_nonbonded_force)
        1    0.000    0.000    0.000    0.000 _nonbonded.py:260(<listcomp>)
        1    0.000    0.000    0.000    0.000 _nonbonded.py:188(_prepare_input_data)
        1    0.003    0.003    0.014    0.014 _nonbonded.py:141(_add_particles_to_system)
        1    0.000    0.000    0.781    0.781 _nonbonded.py:33(_process_nonbonded_forces)
        1    0.000    0.000    0.000    0.000 _gbsa.py:7(_process_gbsa)
        1    0.000    0.000    5.141    5.141 __init__.py:23(to_openmm)
        1    0.000    0.000    0.000    0.000 _create.py:69(_check_supported_handlers)
        1    0.000    0.000   28.673   28.673 _create.py:84(_create_interchange)
        1    0.000    0.000    3.590    3.590 _create.py:133(_bonds)
        1    0.000    0.000    0.000    0.000 _create.py:167(<listcomp>)
        1    0.000    0.000    0.211    0.211 _create.py:158(_constraints)
        1    0.000    0.000    6.447    6.447 _create.py:182(_angles)
        1    0.000    0.000   12.378   12.378 _create.py:196(_propers)
        1    0.000    0.000    0.986    0.986 _create.py:216(_impropers)
        1    0.000    0.000    2.996    2.996 _create.py:230(_vdw)
        1    0.000    0.000    0.000    0.000 _create.py:264(<listcomp>)
        1    0.000    0.000    0.000    0.000 _create.py:266(<listcomp>)
        1    0.000    0.000    1.074    1.074 _create.py:244(_electrostatics)
        1    0.000    0.000    0.000    0.000 _create.py:285(_gbsa)
        1    0.000    0.000    0.000    0.000 _create.py:303(_virtual_sites)
        1    0.000    0.000    0.000    0.000 _create.py:344(_plugins)
        1    0.000    0.000    0.000    0.000 _positions.py:8(_infer_positions)
        1    0.000    0.000    0.000    0.000 _valence.py:110(allowed_parameter_handlers)
      610    0.001    0.000    0.001    0.000 _valence.py:120(potential_parameters)
        1    0.001    0.001    0.002    0.002 _valence.py:128(<listcomp>)
        1    0.000    0.000    0.002    0.002 _valence.py:125(valence_terms)
        1    0.015    0.015    3.127    3.127 _valence.py:130(store_matches)
      610    0.002    0.000    0.008    0.000 _valence.py:219(<dictcomp>)
        1    0.027    0.027    0.397    0.397 _valence.py:176(store_potentials)
        1    0.003    0.003    0.065    0.065 _valence.py:229(_get_uses_interpolation)
        1    0.000    0.000    3.589    3.589 _valence.py:238(create)
        2    0.000    0.000    0.000    0.000 _valence.py:289(allowed_parameter_handlers)
        1    0.000    0.000    0.211    0.211 _valence.py:304(create)
        1    0.000    0.000    0.000    0.000 _valence.py:344(<listcomp>)
        1    0.000    0.000    0.000    0.000 _valence.py:352(<listcomp>)
        1    0.000    0.000    0.000    0.000 _valence.py:353(<listcomp>)
        1    0.039    0.039    0.211    0.211 _valence.py:333(store_constraints)
        1    0.000    0.000    0.000    0.000 _valence.py:398(allowed_parameter_handlers)
     1200    0.001    0.000    0.001    0.000 _valence.py:408(potential_parameters)
        1    0.001    0.001    0.033    0.033 _valence.py:413(valence_terms)
     1200    0.004    0.000    0.017    0.000 _valence.py:427(<dictcomp>)
        1    0.056    0.056    0.540    0.540 _valence.py:418(store_potentials)
        1    0.057    0.057    9.562    9.562 _valence.py:460(store_matches)
        1    0.158    0.158    2.673    2.673 _valence.py:507(store_potentials)
     2841    0.008    0.000    0.139    0.000 _valence.py:570(<genexpr>)
        1    0.001    0.001   12.378   12.378 _valence.py:552(create)
        1    0.000    0.000    0.000    0.000 _valence.py:601(allowed_parameter_handlers)
        1    0.000    0.000    0.986    0.986 _valence.py:616(store_matches)
        1    0.000    0.000    0.000    0.000 _valence.py:661(store_potentials)
        3    0.000    0.000    0.000    0.000 _base.py:103(_check_all_valence_terms_assigned)
        2    0.029    0.014    8.628    4.314 _base.py:233(store_matches)
        2    0.000    0.000    7.433    3.717 _base.py:274(create)
        1    0.000    0.000    0.000    0.000 _nonbonded.py:91(allowed_parameter_handlers)
      620    0.001    0.000    0.001    0.000 _nonbonded.py:106(potential_parameters)
      620    0.002    0.000    0.008    0.000 _nonbonded.py:124(<dictcomp>)
        1    0.025    0.025    0.273    0.273 _nonbonded.py:111(store_potentials)
        1    0.000    0.000    2.996    2.996 _nonbonded.py:132(create)
        2    0.000    0.000    0.023    0.011 _nonbonded.py:214(charges)
        1    0.015    0.015    0.023    0.023 _nonbonded.py:240(_get_charges)
        1    0.000    0.000    0.000    0.000 _nonbonded.py:359(<listcomp>)
        1    0.000    0.000    1.074    1.074 _nonbonded.py:332(create)
       10    0.104    0.010    0.895    0.090 _nonbonded.py:689(_assign_charges_from_molecules)
        1    0.000    0.000    0.000    0.000 _nonbonded.py:750(<dictcomp>)
        1    0.015    0.015    1.073    1.073 _nonbonded.py:736(store_matches)
    28204    0.158    0.000    2.366    0.000 types.py:35(validate_type)
     3680    0.008    0.000    0.012    0.000 models.py:46(__hash__)
     5520    0.049    0.000    1.235    0.000 potentials.py:78(validate_parameters)
        2    0.000    0.000    0.000    0.000 potentials.py:306(__getattr__)
     1450    0.003    0.000    0.005    0.000 models.py:71(__hash__)
     2050    0.005    0.000    0.007    0.000 models.py:121(__hash__)
     1240    0.001    0.000    0.001    0.000 models.py:154(atom_indices)
     1860    0.004    0.000    0.006    0.000 models.py:159(__hash__)
    11660    0.028    0.000    0.041    0.000 models.py:284(__hash__)
        1    0.000    0.000    0.000    0.000 interchange.py:152(validate_box)
        2    0.000    0.000    0.991    0.495 interchange.py:170(validate_topology)
        1    0.000    0.000   28.673   28.673 interchange.py:210(from_smirnoff)
        1    0.000    0.000    5.141    5.141 interchange.py:359(to_openmm)
        5    0.000    0.000    0.000    0.000 interchange.py:725(__getitem__)
        2    0.000    0.000    0.000    0.000 __init__.py:27(__getattr__)
     8784    0.021    0.000    0.093    0.000 parameters.py:1228(_split_attribute_index)
     8784    0.021    0.000    0.098    0.000 parameters.py:1246(_split_attribute_index_mapping)
8960/4480    0.085    0.000    0.238    0.000 parameters.py:1471(index)
     4480    0.022    0.000    0.269    0.000 parameters.py:1529(__getitem__)
     4482    0.006    0.000    0.006    0.000 parameters.py:1894(parameters)
     2434    0.002    0.000    0.002    0.000 parameters.py:1899(TAGNAME)
     7300    0.007    0.000    0.007    0.000 parameters.py:2123(parameter_type)
    11440    0.014    0.000    0.014    0.000 parameters.py:2133(__init__)
        5    0.000    0.000   21.005    4.201 parameters.py:2146(find_matches)
        6    0.124    0.021   21.991    3.665 parameters.py:2166(_find_matches)
        1    0.000    0.000    0.986    0.986 parameters.py:2711(find_matches)
     8200    0.027    0.000    0.043    0.000 collections.py:109(__getitem__)
        2    0.002    0.001    0.008    0.004 topology.py:1188(_build_atom_index_cache)
        2    0.001    0.001    0.002    0.001 topology.py:1197(_invalidate_cached_properties)
        2    0.000    0.000    0.990    0.495 topology.py:1203(copy_initializer)
        2    0.000    0.000    0.037    0.018 topology.py:1232(<listcomp>)
        2    0.000    0.000    0.037    0.018 topology.py:1207(to_dict)
        2    0.000    0.000    0.573    0.287 topology.py:1255(_initialize_from_dict)
       20    0.000    0.000    0.300    0.015 topology.py:2321(_add_molecule_keep_cache)
        9    0.000    0.000    0.000    0.000 forcefield.py:620(registered_parameter_handlers)
        6    0.000    0.000    0.000    0.000 forcefield.py:634(get_parameter_handler)
        1    0.002    0.002   33.816   33.816 forcefield.py:1126(create_openmm_system)
        1    0.000    0.000   28.674   28.674 forcefield.py:1172(create_interchange)
        6    0.000    0.000    0.000    0.000 forcefield.py:1310(_get_parameter_handler_class)
        6    0.000    0.000    0.000    0.000 forcefield.py:1396(__getitem__)
        1    0.000    0.000    0.000    0.000 version.py:69(__lt__)
        1    0.000    0.000    0.000    0.000 version.py:81(__eq__)
        9    0.000    0.000    0.000    0.000 version.py:271(<genexpr>)
        3    0.000    0.000    0.000    0.000 version.py:261(__init__)
        3    0.000    0.000    0.000    0.000 version.py:301(<genexpr>)
        1    0.000    0.000    0.000    0.000 version.py:293(__str__)
        1    0.000    0.000    0.000    0.000 version.py:321(epoch)
        1    0.000    0.000    0.000    0.000 version.py:326(release)
        1    0.000    0.000    0.000    0.000 version.py:331(pre)
        1    0.000    0.000    0.000    0.000 version.py:336(post)
        1    0.000    0.000    0.000    0.000 version.py:340(dev)
        1    0.000    0.000    0.000    0.000 version.py:344(local)
        9    0.000    0.000    0.000    0.000 version.py:393(_parse_letter_version)
        3    0.000    0.000    0.000    0.000 version.py:432(_parse_local_version)
        3    0.000    0.000    0.000    0.000 version.py:459(<lambda>)
        3    0.000    0.000    0.000    0.000 version.py:444(_cmpkey)
       16    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
    90607    0.196    0.000    0.555    0.000 parameters.py:358(__get__)
     8784    0.054    0.000    0.246    0.000 parameters.py:1078(__getattr__)
    16000    0.020    0.000    0.020    0.000 topology.py:149(key_transform)
    16000    0.034    0.000    0.055    0.000 topology.py:189(__keytransform__)
        2    0.000    0.000    0.991    0.495 topology.py:404(__init__)
        2    0.000    0.000    0.000    0.000 topology.py:432(_initialize)
        1    0.000    0.000    0.000    0.000 topology.py:573(box_vectors)
        1    0.000    0.000    0.000    0.000 topology.py:669(n_molecules)
      177    0.000    0.000    0.000    0.000 topology.py:674(molecules)
    74770    0.095    0.000    0.095    0.000 topology.py:688(molecule)
        1    0.000    0.000    0.000    0.000 topology.py:698(n_atoms)
     1242    0.001    0.000    0.001    0.000 topology.py:712(atoms)
    40420    0.049    0.000    0.057    0.000 topology.py:724(atom_index)
     1201    0.001    0.000    0.032    0.000 topology.py:821(angles)
     1711    0.002    0.000    0.037    0.000 topology.py:833(propers)
    11440    0.012    0.000    0.012    0.000 topology.py:969(topology_atom_indices)
    11440    0.038    0.000    0.064    0.000 topology.py:974(__init__)
     7400    0.549    0.000   21.547    0.003 topology.py:996(chemical_environment_matches)
     7401    0.010    0.000    0.010    0.000 topology.py:1071(identical_molecule_groups)
     1240    0.002    0.000    0.002    0.000 {built-in method _oechem3400.OEAtomBase_SetPartialCharge}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEAtomBase_SetName}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEAtomBase_SetMapIdx}
    38580    0.043    0.000    0.043    0.000 {built-in method _oechem3400.OEAtomBase_GetIdx}
    73860    0.081    0.000    0.081    0.000 {built-in method _oechem3400.OEAtomBase_GetMapIdx}
      610    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEBondBase_GetBgnIdx}
      610    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEBondBase_GetEndIdx}
    74010    1.996    0.000    1.996    0.000 {built-in method _oechem3400.new_OEMol}
       10    0.000    0.000    0.000    0.000 {built-in method _oechem3400.OEMol_SetTitle}
       30    0.000    0.000    0.000    0.000 {built-in method _oechem3400.OEMol_GetAtoms}
       10    0.000    0.000    0.000    0.000 {built-in method _oechem3400.OEMol_GetBonds}
    74010    0.160    0.000    0.160    0.000 {built-in method _oechem3400.OEMol_swiginit}
    74000    0.116    0.000    0.116    0.000 {built-in method _oechem3400.new_OEQMol}
    74000    0.119    0.000    0.119    0.000 {built-in method _oechem3400.OEQMol_swiginit}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEResidue_SetName}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEResidue_SetResidueNumber}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEResidue_SetSerialNumber}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEResidue_SetChainID}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEResidue_SetInsertCode}
    11440    0.018    0.000    0.018    0.000 {built-in method _oechem3400.OEMatchBase_GetAtoms}
     1890    0.002    0.000    0.002    0.000 {built-in method _oechem3400.OEAtomIter___nonzero__}
     1860    0.002    0.000    0.002    0.000 {built-in method _oechem3400.OEAtomIter_Target}
     1860    0.002    0.000    0.002    0.000 {built-in method _oechem3400.OEAtomIter_Next}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEBondIter___nonzero__}
      610    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEBondIter_Target}
      610    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEBondIter_Next}
    85440    0.104    0.000    0.104    0.000 {built-in method _oechem3400.OEMatchBaseIter___nonzero__}
    11440    0.015    0.000    0.015    0.000 {built-in method _oechem3400.OEMatchBaseIter_Target}
    11440    0.017    0.000    0.017    0.000 {built-in method _oechem3400.OEMatchBaseIter_Next}
    48580    0.053    0.000    0.053    0.000 {built-in method _oechem3400.OEMatchBaseAtomIter___nonzero__}
    37140    0.047    0.000    0.047    0.000 {built-in method _oechem3400.OEMatchBaseAtomIter_Target}
    37140    0.048    0.000    0.048    0.000 {built-in method _oechem3400.OEMatchBaseAtomIter_Next}
    74000    0.161    0.000    0.161    0.000 {built-in method _oechem3400.OEClearAromaticFlags}
    74000    0.267    0.000    0.267    0.000 {built-in method _oechem3400.OEAssignAromaticFlags}
    74000    0.149    0.000    0.149    0.000 {built-in method _oechem3400.OEAssignHybridization}
       10    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OECreateSmiString}
    74000    2.173    0.000    2.173    0.000 {built-in method _oechem3400.OEParseSmarts}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEAtomSetResidue}
      620    0.001    0.000    0.001    0.000 {built-in method _oechem3400.OEAtomGetResidue}
    74000    4.511    0.000    4.511    0.000 {built-in method _oechem3400.new_OESubSearch}
    74000    0.271    0.000    0.271    0.000 {built-in method _oechem3400.OESubSearch_Match}
    74000    0.105    0.000    0.105    0.000 {built-in method _oechem3400.OESubSearch_SetMaxMatches}
    74000    0.189    0.000    0.189    0.000 {built-in method _oechem3400.OESubSearch_swiginit}
    74000    0.325    0.000    0.325    0.000 {built-in method _oechem3400.OEPrepareSearch}
       10    0.000    0.000    0.000    0.000 topology.py:752(molecule_index)
     1222    0.001    0.000    0.001    0.000 topology.py:804(bonds)
     1230    0.002    0.000    0.003    0.000 oechem.py:13685(__eq__)
     1240    0.003    0.000    0.004    0.000 oechem.py:15343(SetPartialCharge)
      620    0.001    0.000    0.002    0.000 oechem.py:15355(SetName)
      620    0.001    0.000    0.002    0.000 oechem.py:15363(SetMapIdx)
    38580    0.081    0.000    0.124    0.000 oechem.py:15411(GetIdx)
    73860    0.153    0.000    0.235    0.000 oechem.py:15415(GetMapIdx)
      610    0.001    0.000    0.002    0.000 oechem.py:15662(GetBgnIdx)
      610    0.001    0.000    0.002    0.000 oechem.py:15666(GetEndIdx)
    74010    0.277    0.000    2.433    0.000 oechem.py:17153(__init__)
       10    0.000    0.000    0.000    0.000 oechem.py:17277(SetTitle)
       30    0.000    0.000    0.000    0.000 oechem.py:17363(GetAtoms)
       10    0.000    0.000    0.000    0.000 oechem.py:17370(GetBonds)
    74000    0.246    0.000    0.481    0.000 oechem.py:17501(__init__)
      620    0.001    0.000    0.002    0.000 oechem.py:17842(SetName)
      620    0.001    0.000    0.002    0.000 oechem.py:17854(SetResidueNumber)
      620    0.001    0.000    0.002    0.000 oechem.py:17862(SetSerialNumber)
      620    0.001    0.000    0.002    0.000 oechem.py:17882(SetChainID)
      620    0.001    0.000    0.002    0.000 oechem.py:17894(SetInsertCode)
       10    0.000    0.000    0.000    0.000 openeye_wrapper.py:1536(<listcomp>)
       10    0.031    0.003    0.380    0.038 openeye_wrapper.py:1481(to_openeye)
       10    0.000    0.000    0.000    0.000 openeye_wrapper.py:1710(_get_smiles_flavor)
       10    0.002    0.000    0.396    0.040 openeye_wrapper.py:1735(to_smiles)
    48160    0.051    0.000    0.051    0.000 openeye_wrapper.py:2772(<genexpr>)
    74000    2.110    0.000   16.770    0.000 openeye_wrapper.py:2686(_find_smarts_matches)
    74000    1.140    0.000   19.450    0.000 openeye_wrapper.py:2777(find_smarts_matches)
        2    0.000    0.000    0.000    0.000 toolkit_registry.py:111(registered_toolkits)
        8    0.000    0.000    0.000    0.000 toolkit_registry.py:143(register_toolkit)
        8    0.000    0.000    0.000    0.000 toolkit_registry.py:185(deregister_toolkit)
       10    0.000    0.000    0.000    0.000 toolkit_registry.py:256(resolve)
    74000    0.443    0.000   20.058    0.000 toolkit_registry.py:304(call)
        2    0.000    0.000    0.000    0.000 toolkit_registry.py:378(_toolkit_registry_manager)
    74010    0.103    0.000    0.103    0.000 __init__.py:66(__getitem__)
    74010    0.083    0.000    0.083    0.000 __init__.py:93(__contains__)
    74010    0.350    0.000    0.795    0.000 __init__.py:210(__getitem__)
    74010    0.173    0.000    0.258    0.000 __init__.py:233(__update)
    74010    0.275    0.000    1.540    0.000 __init__.py:731(wrapper)
       40    0.000    0.000    0.001    0.000 utils.py:355(serialize_numpy)
       40    0.001    0.000    0.001    0.000 utils.py:380(deserialize_numpy)
      190    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.HarmonicBondForce_addBond}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.new_HarmonicBondForce}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.HarmonicBondForce_swiginit}
     1200    0.002    0.000    0.002    0.000 {built-in method openmm._openmm.HarmonicAngleForce_addAngle}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.new_HarmonicAngleForce}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.HarmonicAngleForce_swiginit}
      620    0.001    0.000    0.001    0.000 {built-in method openmm._openmm.System_addParticle}
      420    0.001    0.000    0.001    0.000 {built-in method openmm._openmm.System_addConstraint}
        4    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.System_addForce}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.System_getNumForces}
        2    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.System_getForce}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.new_System}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.System_swiginit}
     2050    0.004    0.000    0.004    0.000 {built-in method openmm._openmm.PeriodicTorsionForce_addTorsion}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.new_PeriodicTorsionForce}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.PeriodicTorsionForce_swiginit}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.NonbondedForce_setNonbondedMethod}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.NonbondedForce_setCutoffDistance}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.NonbondedForce_setUseSwitchingFunction}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.NonbondedForce_setSwitchingDistance}
      620    0.001    0.000    0.001    0.000 {built-in method openmm._openmm.NonbondedForce_addParticle}
      620    0.001    0.000    0.001    0.000 {built-in method openmm._openmm.NonbondedForce_setParticleParameters}
        1    0.002    0.002    0.002    0.002 {built-in method openmm._openmm.NonbondedForce_createExceptionsFromBonds}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.NonbondedForce_setUseDispersionCorrection}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.new_NonbondedForce}
        1    0.000    0.000    0.000    0.000 {built-in method openmm._openmm.NonbondedForce_swiginit}
        8    0.000    0.000    0.000    0.000 {method 'own' of 'SwigPyObject' objects}
       24    0.000    0.000    0.000    0.000 unit.py:203(__hash__)
        2    0.000    0.000    0.000    0.000 unit.py:308(is_compatible)
        2    0.000    0.000    0.000    0.000 unit.py:338(is_dimensionless)
        2    0.000    0.000    0.000    0.000 unit.py:354(conversion_factor_to)
        4    0.000    0.000    0.000    0.000 quantity.py:97(__init__)
        2    0.000    0.000    0.000    0.000 unit.py:703(is_unit)
        2    0.000    0.000    0.000    0.000 quantity.py:619(value_in_unit)
        2    0.000    0.000    0.000    0.000 quantity.py:647(in_units_of)
        2    0.000    0.000    0.000    0.000 quantity.py:663(_change_units_with_factor)
    11650    0.023    0.000    0.034    0.000 quantity.py:787(is_quantity)
        2    0.000    0.000    0.000    0.000 unit_operators.py:80(_unit_class_mul)
        1    0.000    0.000    0.000    0.000 openmm.py:5632(<lambda>)
      190    0.001    0.000    0.002    0.000 openmm.py:5642(addBond)
        1    0.000    0.000    0.000    0.000 openmm.py:5759(__init__)
        1    0.000    0.000    0.000    0.000 openmm.py:5808(<lambda>)
     1200    0.006    0.000    0.015    0.000 openmm.py:5818(addAngle)
        1    0.000    0.000    0.000    0.000 openmm.py:5941(__init__)
    74010    0.221    0.000    0.471    0.000 base_wrapper.py:21(_mol_to_ctab_and_aro_key)
      620    0.002    0.000    0.004    0.000 openmm.py:10890(addParticle)
      420    0.002    0.000    0.004    0.000 openmm.py:11009(addConstraint)
        4    0.000    0.000    0.000    0.000 openmm.py:11099(addForce)
        1    0.000    0.000    0.000    0.000 openmm.py:11129(getNumForces)
        2    0.000    0.000    0.000    0.000 openmm.py:11136(getForce)
        1    0.000    0.000    0.000    0.000 openmm.py:11238(<listcomp>)
        1    0.000    0.000    0.000    0.000 openmm.py:11236(getForces)
        1    0.000    0.000    0.000    0.000 openmm.py:11245(__init__)
        1    0.000    0.000    0.000    0.000 openmm.py:12740(<lambda>)
     2050    0.010    0.000    0.026    0.000 openmm.py:12750(addTorsion)
        1    0.000    0.000    0.000    0.000 openmm.py:12885(__init__)
        1    0.000    0.000    0.000    0.000 openmm.py:13655(<lambda>)
        1    0.000    0.000    0.000    0.000 openmm.py:13712(setNonbondedMethod)
        1    0.000    0.000    0.000    0.000 openmm.py:13737(setCutoffDistance)
        1    0.000    0.000    0.000    0.000 openmm.py:13762(setUseSwitchingFunction)
        1    0.000    0.000    0.000    0.000 openmm.py:13782(setSwitchingDistance)
      620    0.003    0.000    0.010    0.000 openmm.py:13957(addParticle)
      620    0.004    0.000    0.011    0.000 openmm.py:14017(setParticleParameters)
        1    0.000    0.000    0.002    0.002 openmm.py:14153(createExceptionsFromBonds)
        1    0.000    0.000    0.000    0.000 openmm.py:14395(setUseDispersionCorrection)
        1    0.000    0.000    0.000    0.000 openmm.py:14496(__init__)
     8540    0.035    0.000    2.093    0.000 registry.py:354(_convert)
       10    0.000    0.000    0.001    0.000 registry.py:395(_get_compatible_units)
      620    0.010    0.000    0.131    0.000 objects.py:31(__format__)
      620    0.002    0.000    0.072    0.000 objects.py:184(__format__)
       10    0.000    0.000    0.001    0.000 registry.py:121(_get_compatible_units)
    24620    0.065    0.000    0.582    0.000 registry.py:56(_parse_units)
    27980    0.124    0.000    0.449    0.000 registry.py:107(_is_multiplicative)
    17080    0.100    0.000    0.727    0.000 registry.py:124(<listcomp>)
    17080    0.097    0.000    0.912    0.000 registry.py:122(_validate_and_extract)
     8540    0.046    0.000    2.030    0.000 registry.py:165(_convert)
        1    0.000    0.000    0.000    0.000 objects.py:15(_is_multiplicative)
     3133    0.006    0.000    0.014    0.000 objects.py:22(<listcomp>)
     3133    0.011    0.000    0.035    0.000 objects.py:20(_get_non_multiplicative_units)
     1890    0.003    0.000    0.003    0.000 objects.py:43(_ok_for_muldiv)
       10    0.000    0.000    0.001    0.000 quantity.py:68(_numpy_method_wrap)
       20    0.000    0.000    0.000    0.000 quantity.py:162(shape)
       10    0.000    0.000    0.000    0.000 quantity.py:204(__getattr__)
     1240    0.003    0.000    0.061    0.000 quantity.py:235(__getitem__)
       10    0.000    0.000    0.000    0.000 objects.py:72(members)
       10    0.000    0.000    0.001    0.000 registry.py:229(_get_compatible_units)
    54389    0.060    0.000    0.060    0.000 registry.py:184(get)
    14180    0.014    0.000    0.014    0.000 util.py:309(__missing__)
    16070    0.022    0.000    0.022    0.000 util.py:312(copy)
    14194    0.066    0.000    0.128    0.000 util.py:334(__init__)
    16070    0.034    0.000    0.130    0.000 util.py:358(copy)
    42865    0.086    0.000    0.130    0.000 util.py:408(__iter__)
    41065    0.083    0.000    0.123    0.000 util.py:411(__len__)
    54192    0.058    0.000    0.058    0.000 util.py:414(__getitem__)
   135997    0.191    0.000    0.229    0.000 util.py:420(__hash__)
    54529    0.242    0.000    0.454    0.000 util.py:433(__eq__)
        2    0.000    0.000    0.000    0.000 util.py:454(__str__)
        2    0.000    0.000    0.000    0.000 util.py:463(__format__)
    16070    0.058    0.000    0.097    0.000 util.py:469(__copy__)
     1890    0.012    0.000    0.047    0.000 util.py:478(__mul__)
      190    0.001    0.000    0.004    0.000 util.py:494(__pow__)
    13990    0.128    0.000    0.450    0.000 util.py:505(__truediv__)
     8999    0.049    0.000    0.218    0.000 util.py:671(__eq__)
        4    0.000    0.000    0.000    0.000 util.py:779(string_preprocessor)
   164300    0.745    0.000    1.633    0.000 util.py:816(__new__)
    12081    0.033    0.000    0.051    0.000 util.py:826(_check)
    45692    0.102    0.000    0.152    0.000 util.py:878(to_units_container)
    24550    0.135    0.000    0.240    0.000 util.py:957(getattr_maybe_raise)
        4    0.000    0.000    0.000    0.000 pint_eval.py:71(__init__)
        4    0.000    0.000    0.000    0.000 pint_eval.py:89(evaluate)
        4    0.000    0.000    0.001    0.000 pint_eval.py:130(build_eval_tree)
55522/30902    0.207    0.000    1.224    0.000 unit.py:39(__init__)
    29233    0.062    0.000    0.090    0.000 definitions.py:185(is_multiplicative)
     1890    0.006    0.000    0.257    0.000 quantity.py:81(wrapped)
4991/3751    0.024    0.000    0.489    0.000 quantity.py:94(wrapped)
    29233    0.029    0.000    0.029    0.000 converters.py:26(is_multiplicative)
    56279    0.062    0.000    0.062    0.000 quantity.py:152(force_ndarray)
    56279    0.060    0.000    0.060    0.000 quantity.py:156(force_ndarray_like)
     1890    0.002    0.000    0.002    0.000 quantity.py:160(UnitsContainer)
82589/54389    0.770    0.000    3.415    0.000 quantity.py:198(__new__)
     1260    0.003    0.000    0.061    0.000 quantity.py:253(it_outer)
       20    0.000    0.000    0.000    0.000 quantity.py:247(__iter__)
    28200    0.101    0.000    1.577    0.000 quantity.py:259(__copy__)
    13750    0.015    0.000    0.015    0.000 quantity.py:288(magnitude)
     3737    0.004    0.000    0.004    0.000 quantity.py:293(m)
    12490    0.045    0.000    3.180    0.000 quantity.py:298(m_as)
      642    0.003    0.000    0.009    0.000 quantity.py:312(units)
     2050    0.010    0.000    0.255    0.000 quantity.py:327(dimensionless)
     5780    0.011    0.000    0.087    0.000 quantity.py:336(dimensionality)
    16594    0.042    0.000    2.497    0.000 quantity.py:466(_convert_magnitude_not_inplace)
    12494    0.068    0.000    3.122    0.000 quantity.py:504(to)
     2050    0.011    0.000    0.198    0.000 quantity.py:536(to_root_units)
     2050    0.012    0.000    0.329    0.000 quantity.py:699(__int__)
      621    0.010    0.000    0.095    0.000 quantity.py:827(_add_sub)
      620    0.003    0.000    0.108    0.000 quantity.py:948(__iadd__)
        1    0.000    0.000    0.000    0.000 quantity.py:970(__sub__)
     1890    0.034    0.000    0.251    0.000 quantity.py:1050(_mul_div)
     1890    0.005    0.000    0.276    0.000 quantity.py:1130(__mul__)
     1240    0.003    0.000    0.014    0.000 quantity.py:1405(bool_result)
     1240    0.011    0.000    0.087    0.000 quantity.py:1403(__eq__)
     1240    0.004    0.000    0.110    0.000 quantity.py:1459(__ne__)
        1    0.000    0.000    0.000    0.000 quantity.py:1511(__bool__)
     1253    0.003    0.000    0.004    0.000 quantity.py:1541(_get_unit_definition)
       10    0.000    0.000    0.003    0.000 unit.py:91(compatible_units)
     4110    0.024    0.000    0.544    0.000 unit.py:136(__mul__)
     5450    0.039    0.000    0.274    0.000 unit.py:151(__truediv__)
      190    0.001    0.000    0.007    0.000 unit.py:174(__pow__)
       40    0.000    0.000    0.000    0.000 unit.py:182(__hash__)
       10    0.000    0.000    0.000    0.000 unit.py:185(__eq__)
    24550    0.118    0.000    1.682    0.000 registry.py:325(__getattr__)
    12144    0.048    0.000    0.177    0.000 registry.py:375(UnitsContainer)
    18294    0.019    0.000    0.019    0.000 registry.py:395(non_int_type)
     6154    0.007    0.000    0.007    0.000 registry.py:573(get_name)
    20399    0.093    0.000    0.482    0.000 registry.py:645(_get_dimensionality)
    10590    0.047    0.000    0.215    0.000 registry.py:746(_get_root_units)
       40    0.000    0.000    0.001    0.000 registry.py:838(<genexpr>)
       10    0.000    0.000    0.003    0.000 registry.py:830(get_compatible_units)
       10    0.000    0.000    0.001    0.000 registry.py:840(_get_compatible_units)
    16594    0.086    0.000    2.455    0.000 registry.py:878(convert)
     8540    0.088    0.000    1.071    0.000 registry.py:913(_convert)
    24620    0.123    0.000    0.915    0.000 registry.py:1041(parse_units)
    24620    0.133    0.000    0.517    0.000 registry.py:1072(_parse_units)
        4    0.000    0.000    0.000    0.000 registry.py:1117(_eval_token)
        4    0.000    0.000    0.000    0.000 registry.py:1256(<lambda>)
        4    0.000    0.000    0.001    0.000 registry.py:1211(parse_expression)
     7412    0.020    0.000    0.032    0.000 __init__.py:1455(debug)
     7412    0.012    0.000    0.012    0.000 __init__.py:1724(isEnabledFor)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    11440    0.025    0.000    0.043    0.000 oechem.py:22692(GetAtoms)
     1890    0.004    0.000    0.006    0.000 oechem.py:22956(IsValid)
     1890    0.008    0.000    0.026    0.000 oechem.py:22961(__iter__)
     1860    0.004    0.000    0.006    0.000 oechem.py:22974(Target)
     1860    0.004    0.000    0.006    0.000 oechem.py:22978(Next)
      620    0.001    0.000    0.002    0.000 oechem.py:23038(IsValid)
      620    0.003    0.000    0.009    0.000 oechem.py:23043(__iter__)
      610    0.001    0.000    0.002    0.000 oechem.py:23056(Target)
      610    0.001    0.000    0.002    0.000 oechem.py:23060(Next)
    85440    0.188    0.000    0.292    0.000 oechem.py:23530(IsValid)
    85440    0.229    0.000    0.604    0.000 oechem.py:23535(__iter__)
    11440    0.025    0.000    0.040    0.000 oechem.py:23548(Target)
    11440    0.026    0.000    0.043    0.000 oechem.py:23552(Next)
    48580    0.102    0.000    0.156    0.000 oechem.py:23612(IsValid)
    48580    0.196    0.000    0.607    0.000 oechem.py:23617(__iter__)
    37140    0.077    0.000    0.124    0.000 oechem.py:23630(Target)
    37140    0.082    0.000    0.131    0.000 oechem.py:23634(Next)
    74000    0.171    0.000    0.332    0.000 oechem.py:24768(OEClearAromaticFlags)
    74000    0.162    0.000    0.429    0.000 oechem.py:24772(OEAssignAromaticFlags)
    74000    0.165    0.000    0.314    0.000 oechem.py:25990(OEAssignHybridization)
       10    0.000    0.000    0.001    0.000 oechem.py:27626(OECreateSmiString)
    74000    0.175    0.000    2.349    0.000 oechem.py:27877(OEParseSmarts)
      620    0.001    0.000    0.002    0.000 oechem.py:28205(OEAtomSetResidue)
      620    0.001    0.000    0.002    0.000 oechem.py:28209(OEAtomGetResidue)
    74000    0.278    0.000    4.978    0.000 oechem.py:28836(__init__)
    74000    0.198    0.000    0.469    0.000 oechem.py:28871(Match)
    74000    0.166    0.000    0.271    0.000 oechem.py:28886(SetMaxMatches)
    74000    0.166    0.000    0.491    0.000 oechem.py:28912(OEPrepareSearch)
        2    0.000    0.000    0.000    0.000 openmm.py:206(to_openmm_inner)
        2    0.000    0.000    0.000    0.000 openmm.py:179(to_openmm)
      4/1    0.000    0.000   33.816   33.816 utilities.py:69(wrapper)
      622    0.002    0.000    0.004    0.000 formatting.py:23(_join)
      622    0.003    0.000    0.031    0.000 formatting.py:227(format_default)
      622    0.004    0.000    0.026    0.000 formatting.py:255(formatter)
      622    0.003    0.000    0.037    0.000 formatting.py:396(format_unit)
     2480    0.003    0.000    0.003    0.000 formatting.py:459(extract_custom_flags)
     2480    0.030    0.000    0.056    0.000 formatting.py:474(remove_custom_flags)
     1240    0.007    0.000    0.066    0.000 formatting.py:481(split_format)
       16    0.000    0.000    0.000    0.000 compat.py:32(tokenizer)
    56289    0.236    0.000    0.401    0.000 compat.py:52(_to_magnitude)
    87580    0.094    0.000    0.094    0.000 compat.py:181(is_upcast_type)
     5590    0.028    0.000    0.051    0.000 compat.py:195(is_duck_array_type)
     2480    0.005    0.000    0.028    0.000 compat.py:221(eq)
        2    0.000    0.000    0.000    0.000 openmm.py:73(_ast_eval)
        2    0.000    0.000    0.000    0.000 openmm.py:117(string_to_openmm_unit)
       80    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
       50    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       40    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       40    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
       10    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
       40    0.000    0.000    0.000    0.000 {built-in method numpy.frombuffer}
     1240    0.003    0.000    0.003    0.000 {method '__copy__' of 'numpy.generic' objects}
        4    0.000    0.000    0.000    0.000 tokenize.py:321(read_or_stop)
        4    0.000    0.000    0.000    0.000 tokenize.py:327(find_cookie)
        4    0.000    0.000    0.000    0.000 tokenize.py:297(detect_encoding)
        4    0.000    0.000    0.000    0.000 tokenize.py:406(tokenize)
       20    0.000    0.000    0.000    0.000 tokenize.py:431(_tokenize)
    74000    0.393    0.000   20.598    0.000 molecule.py:3490(chemical_environment_matches)
       10    0.008    0.001    0.031    0.003 molecule.py:5009(_construct_angles)
       10    0.020    0.002    0.035    0.004 molecule.py:5026(_construct_torsions)
       20    0.004    0.000    0.015    0.001 molecule.py:5067(_construct_bonded_atoms_list)
      610    0.005    0.000    0.008    0.000 molecule.py:5104(get_bond_between)
        9    0.000    0.000    0.000    0.000 topology.py:108(__len__)
       40    0.000    0.000    0.252    0.006 molecule.py:5187(__init__)
     1260    0.001    0.000    0.001    0.000 molecule.py:5627(<genexpr>)
       20    0.000    0.000    0.049    0.002 molecule.py:5618(_atom_nums_to_hill_formula)
     4560    0.004    0.000    0.004    0.000 topology.py:114(__sortfunc__)
        6    0.000    0.000    0.009    0.002 topology.py:105(__iter__)
56400/28200    0.246    0.000    1.815    0.000 copy.py:66(copy)
    26960    0.027    0.000    0.027    0.000 copy.py:107(_copy_immutable)
 37102/82    0.200    0.000    0.726    0.009 copy.py:128(deepcopy)
    33176    0.032    0.000    0.032    0.000 copy.py:182(_deepcopy_atomic)
 3864/102    0.051    0.000    0.426    0.004 copy.py:227(_deepcopy_dict)
     42/2    0.006    0.000    0.380    0.190 copy.py:201(_deepcopy_list)
     3926    0.013    0.000    0.020    0.000 copy.py:243(_keep_alive)
        8    0.000    0.000    0.000    0.000 inspect.py:191(isclass)
        2    0.000    0.000    0.000    0.000 ast.py:33(parse)
        2    0.000    0.000    0.000    0.000 ast.py:531(__instancecheck__)
     9760    0.009    0.000    0.009    0.000 molecule.py:109(molecule)
     5942    0.012    0.000    0.018    0.000 typing.py:1278(__eq__)
    17568    0.059    0.000    0.150    0.000 re.py:197(search)
    17568    0.042    0.000    0.064    0.000 re.py:288(_compile)
       36    0.000    0.000    0.000    0.000 re.py:324(_subx)
     2480    0.006    0.000    0.031    0.000 molecule.py:160(__init__)
     2480    0.014    0.000    0.368    0.000 molecule.py:191(__init__)
     2480    0.013    0.000    0.036    0.000 molecule.py:276(to_dict)
     4880    0.010    0.000    0.017    0.000 molecule.py:263(add_bond)
     2480    0.003    0.000    0.003    0.000 molecule.py:294(metadata)
     3720    0.004    0.000    0.004    0.000 molecule.py:301(formal_charge)
     2480    0.014    0.000    0.320    0.000 molecule.py:308(formal_charge)
     1240    0.004    0.000    0.067    0.000 molecule.py:346(partial_charge)
     2480    0.003    0.000    0.003    0.000 molecule.py:390(is_aromatic)
     4560    0.010    0.000    0.025    0.000 topology.py:96(__getitem__)
        6    0.000    0.000    0.000    0.000 topology.py:92(__init__)
     3100    0.003    0.000    0.003    0.000 molecule.py:397(stereochemistry)
      620    0.001    0.000    0.002    0.000 molecule.py:428(symbol)
     4960    0.005    0.000    0.005    0.000 molecule.py:420(atomic_number)
      620    0.001    0.000    0.002    0.000 molecule.py:436(mass)
      620    0.001    0.000    0.001    0.000 molecule.py:449(name)
      610    0.001    0.000    0.001    0.000 molecule.py:471(bonds)
     2440    0.009    0.000    0.014    0.000 molecule.py:491(is_bonded_to)
    20240    0.029    0.000    0.035    0.000 molecule.py:529(molecule_atom_index)
    11440    0.027    0.000    0.067    0.000 topology.py:99(__setitem__)
     2440    0.022    0.000    0.062    0.000 molecule.py:635(__init__)
     2440    0.014    0.000    0.031    0.000 molecule.py:666(to_dict)
     2440    0.002    0.000    0.002    0.000 molecule.py:699(atom1)
     2440    0.002    0.000    0.002    0.000 molecule.py:703(atom2)
     3660    0.015    0.000    0.026    0.000 molecule.py:707(atom1_index)
     3660    0.015    0.000    0.027    0.000 molecule.py:711(atom2_index)
     7830    0.008    0.000    0.008    0.000 molecule.py:715(atoms)
      610    0.001    0.000    0.001    0.000 molecule.py:719(bond_order)
      610    0.001    0.000    0.001    0.000 molecule.py:736(fractional_bond_order)
     3050    0.003    0.000    0.003    0.000 molecule.py:744(stereochemistry)
     2440    0.002    0.000    0.002    0.000 molecule.py:748(is_aromatic)
     7320    0.007    0.000    0.007    0.000 molecule.py:752(molecule)
      610    0.002    0.000    0.003    0.000 molecule.py:769(molecule_bond_index)
       40    0.000    0.000    0.252    0.006 molecule.py:862(__init__)
       40    0.003    0.000    0.039    0.001 molecule.py:1137(<listcomp>)
       40    0.003    0.000    0.034    0.001 molecule.py:1138(<listcomp>)
       40    0.001    0.000    0.084    0.002 molecule.py:1104(to_dict)
    74010    0.104    0.000    0.249    0.000 molecule.py:1181(ordered_connection_table_hash)
       20    0.000    0.000    0.271    0.014 molecule.py:1195(from_dict)
       40    0.011    0.000    0.521    0.013 molecule.py:1216(_initialize_from_dict)
       60    0.000    0.000    0.001    0.000 molecule.py:1290(_initialize)
       20    0.000    0.000    0.299    0.015 molecule.py:1336(__deepcopy__)
       70    0.000    0.000    0.000    0.000 molecule.py:1532(__getattr__)
       10    0.000    0.000    0.396    0.040 molecule.py:1545(to_smiles)
       20    0.022    0.001    0.190    0.010 molecule.py:1869(_is_exactly_the_same_as)
       40    0.000    0.000    0.000    0.000 molecule.py:1999(_object_to_n_atoms)
       10    0.000    0.000    0.000    0.000 molecule.py:2024(<dictcomp>)
       20    0.000    0.000    0.244    0.012 molecule.py:1888(are_isomorphic)
       10    0.000    0.000    0.159    0.016 molecule.py:2117(is_isomorphic_with)
       60    0.000    0.000    0.000    0.000 molecule.py:2690(_invalidate_cached_properties)
     2480    0.013    0.000    0.386    0.000 molecule.py:2836(_add_atom)
     2440    0.025    0.000    0.116    0.000 molecule.py:2909(_add_bond)
       40    0.000    0.000    0.000    0.000 molecule.py:3044(partial_charges)
       10    0.000    0.000    0.005    0.000 molecule.py:3056(partial_charges)
      170    0.000    0.000    0.001    0.000 molecule.py:3122(n_atoms)
       10    0.000    0.000    0.000    0.000 molecule.py:3129(n_bonds)
    16740    0.017    0.000    0.017    0.000 molecule.py:3160(atoms)
    37340    0.040    0.000    0.040    0.000 molecule.py:3167(atom)
     1240    0.002    0.000    0.004    0.000 molecule.py:3181(atom_index)
       11    0.000    0.000    0.000    0.000 molecule.py:3210(n_conformers)
      680    0.001    0.000    0.001    0.000 molecule.py:3219(bonds)
       10    0.000    0.000    0.031    0.003 molecule.py:3240(angles)
       10    0.000    0.000    0.035    0.004 molecule.py:3264(propers)
       10    0.002    0.000    0.114    0.011 molecule.py:3412(total_charge)
       10    0.000    0.000    0.000    0.000 molecule.py:3422(name)
       40    0.000    0.000    0.000    0.000 molecule.py:3429(name)
       10    0.000    0.000    0.000    0.000 molecule.py:3441(properties)
       20    0.001    0.000    0.003    0.000 molecule.py:3468(<listcomp>)
       40    0.000    0.000    0.052    0.001 molecule.py:3455(to_hill_formula)
       40    0.000    0.000    0.052    0.001 molecule.py:3473(_object_to_hill_formula)
    90058    0.184    0.000    0.302    0.000 abc.py:117(__instancecheck__)
       10    0.000    0.000    0.000    0.000 compute_loading_times_variable_N.py:39(<dictcomp>)
     2480    0.005    0.000    0.008    0.000 _collections_abc.py:836(keys)
    33588    0.074    0.000    0.112    0.000 _collections_abc.py:840(items)
    36068    0.041    0.000    0.041    0.000 _collections_abc.py:862(__init__)
     1244    0.003    0.000    0.009    0.000 _collections_abc.py:865(__len__)
     2480    0.005    0.000    0.013    0.000 _collections_abc.py:885(__iter__)
    86190    0.188    0.000    0.374    0.000 _collections_abc.py:909(__iter__)
     9886    0.055    0.000    0.199    0.000 _collections_abc.py:991(update)
        6    0.000    0.000    0.001    0.000 __init__.py:108(import_module)
        1    0.000    0.000    0.000    0.000 contextlib.py:102(__init__)
        1    0.000    0.000    0.000    0.000 contextlib.py:130(__enter__)
        1    0.000    0.000    0.000    0.000 contextlib.py:139(__exit__)
        1    0.000    0.000    0.000    0.000 contextlib.py:279(helper)
        1    0.000    0.000    0.000    0.000 compute_loading_times_variable_N.py:27(_identify_all_molecules)
       20    0.000    0.000    0.003    0.000 __init__.py:565(__init__)
       20    0.000    0.000    0.003    0.000 __init__.py:640(update)
    29237    0.034    0.000    0.034    0.000 __init__.py:980(__getitem__)
   105200    0.112    0.000    0.112    0.000 __init__.py:1001(<genexpr>)
    52600    0.178    0.000    0.402    0.000 __init__.py:1000(__contains__)
     8550    0.018    0.000    0.027    0.000 __init__.py:1003(__bool__)
     2480    0.005    0.000    0.008    0.000 __init__.py:1114(__iter__)
     2480    0.003    0.000    0.003    0.000 __init__.py:1118(__contains__)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:71(__init__)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:100(acquire)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:125(release)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:165(__init__)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:169(__enter__)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:173(__exit__)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:198(cb)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:179(_get_module_lock)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:216(_lock_unlock_module)
    57709    0.137    0.000    0.200    0.000 <frozen importlib._bootstrap>:404(parent)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:968(_sanity_check)
        6    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:1022(_find_and_load)
        6    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:1038(_gcd_import)
   128443    0.458    0.000    0.721    0.000 <frozen importlib._bootstrap>:1053(_handle_fromlist)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.all}
    61152    0.125    0.000    0.328    0.000 {built-in method builtins.any}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.compile}
     1240    0.002    0.000    0.074    0.000 {built-in method builtins.format}
242081/234381    0.286    0.000    0.552    0.000 {built-in method builtins.getattr}
383616/383606    0.424    0.000    0.425    0.000 {built-in method builtins.hasattr}
    39484    0.042    0.000    0.042    0.000 {built-in method builtins.hash}
    45056    0.044    0.000    0.044    0.000 {built-in method builtins.id}
1030966/1030964    1.107    0.000    1.366    0.000 {built-in method builtins.isinstance}
    35050    0.034    0.000    0.034    0.000 {built-in method builtins.issubclass}
    45375    0.046    0.000    0.046    0.000 {built-in method builtins.iter}
236659/229256    0.251    0.000    0.267    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.next}
     4158    0.015    0.000    0.034    0.000 {built-in method builtins.sorted}
       10    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
    74010    0.086    0.000    0.086    0.000 {method 'move_to_end' of 'collections.OrderedDict' objects}
        4    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BytesIO' objects}
       24    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
       24    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
       24    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
    90058    0.118    0.000    0.118    0.000 {built-in method _abc._abc_instancecheck}
       20    0.001    0.000    0.002    0.000 {built-in method _collections._count_elements}
      620    0.001    0.000    0.001    0.000 {built-in method _operator.add}
        1    0.000    0.000    0.000    0.000 {built-in method _operator.sub}
     3780    0.007    0.000    0.054    0.000 {built-in method _operator.mul}
       12    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
    18193    0.028    0.000    0.028    0.000 {method 'search' of 're.Pattern' objects}
       40    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
       30    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        4    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
       24    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
       24    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        4    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
    20473    0.020    0.000    0.020    0.000 {method 'replace' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
      644    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
       12    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
    24550    0.025    0.000    0.025    0.000 {method 'lstrip' of 'str' objects}
    57709    0.063    0.000    0.063    0.000 {method 'rpartition' of 'str' objects}
     6774    0.007    0.000    0.007    0.000 {method 'strip' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
    25190    0.027    0.000    0.027    0.000 {method 'startswith' of 'str' objects}
    24550    0.029    0.000    0.029    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
     8020    0.025    0.000    0.025    0.000 {method 'format' of 'str' objects}
    45692    0.050    0.000    0.050    0.000 {method 'mro' of 'type' objects}
   180389    0.188    0.000    0.188    0.000 {built-in method __new__ of type object at 0x7f96d39be5c0}
    12260    0.012    0.000    0.012    0.000 {method 'add' of 'set' objects}
   131344    0.128    0.000    0.128    0.000 {method 'get' of 'dict' objects}
    14234    0.015    0.000    0.015    0.000 {method 'pop' of 'dict' objects}
     2510    0.003    0.000    0.003    0.000 {method 'keys' of 'dict' objects}
    60563    0.062    0.000    0.062    0.000 {method 'items' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       17    0.008    0.000    0.009    0.001 {method 'update' of 'dict' objects}
    12680    0.013    0.000    0.013    0.000 {function ParameterList.__getitem__ at 0x7f9678f1fc70}
    76423    0.080    0.000    0.080    0.000 {method 'append' of 'list' objects}
        8    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
    14890    0.019    0.000    0.019    0.000 {method 'index' of 'list' objects}
       12    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        4    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}


